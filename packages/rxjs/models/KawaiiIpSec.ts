// tslint:disable
/**
 * Kowabunga API documentation
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * The version of the OpenAPI document: 0.52.5
 * Contact: maintainers@kowabunga.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {
    KawaiiFirewall,
} from './';

/**
 * A Kawaii IPsec connection.
 * @export
 * @interface KawaiiIpSec
 */
export interface KawaiiIpSec {
    /**
     * The Kawaii IPsec connection ID (auto-generated).
     * @type {string}
     * @memberof KawaiiIpSec
     */
    id?: string;
    /**
     * The Kawaii IPsec connection name.
     * @type {string}
     * @memberof KawaiiIpSec
     */
    name: string;
    /**
     * The Kawaii IPsec connection description.
     * @type {string}
     * @memberof KawaiiIpSec
     */
    description?: string;
    /**
     * The Kawaii IPsec connection IPSec IP.
     * @type {string}
     * @memberof KawaiiIpSec
     */
    ip?: string;
    /**
     * The Kawaii IPsec connection remote peer VPN Gateway.
     * @type {string}
     * @memberof KawaiiIpSec
     */
    remote_ip: string;
    /**
     * The Kawaii IPsec connection remote subnet.
     * @type {string}
     * @memberof KawaiiIpSec
     */
    remote_subnet: string;
    /**
     * The Kawaii IPsec connection pre-shared key(PSK).
     * @type {string}
     * @memberof KawaiiIpSec
     */
    pre_shared_key: string;
    /**
     * The Kawaii IPsec connection Dead Peer Detection Action (clear,restart or trap).
     * @type {string}
     * @memberof KawaiiIpSec
     */
    dpd_timeout_action?: KawaiiIpSecDpdTimeoutActionEnum;
    /**
     * The Kawaii IPsec connection Dead Peer Detection Timeout.
     * @type {string}
     * @memberof KawaiiIpSec
     */
    dpd_timeout?: string;
    /**
     * The Kawaii IPsec connection start action (none, start, trap).
     * @type {string}
     * @memberof KawaiiIpSec
     */
    start_action?: KawaiiIpSecStartActionEnum;
    /**
     * The Kawaii IPsec connection rekey time. Default is 2h.
     * @type {string}
     * @memberof KawaiiIpSec
     */
    rekey_time?: string;
    /**
     * The Kawaii IPsec connection Lifetime for phase 1 negociation. Default is 1h.
     * @type {string}
     * @memberof KawaiiIpSec
     */
    phase1_lifetime?: string;
    /**
     * The Kawaii IPsec connection phase 1 Diffie Hellman IANA algorithm.
     * @type {number}
     * @memberof KawaiiIpSec
     */
    phase1_dh_group_number: KawaiiIpSecPhase1DhGroupNumberEnum;
    /**
     * The Kawaii IPsec connection phase 1 integrity algorithm..
     * @type {string}
     * @memberof KawaiiIpSec
     */
    phase1_integrity_algorithm: KawaiiIpSecPhase1IntegrityAlgorithmEnum;
    /**
     * The Kawaii IPsec connection phase 1 encryption algorithm..
     * @type {string}
     * @memberof KawaiiIpSec
     */
    phase1_encryption_algorithm: KawaiiIpSecPhase1EncryptionAlgorithmEnum;
    /**
     * The Kawaii IPsec connection Lifetime for phase 2 negociation. Default is 1h.
     * @type {string}
     * @memberof KawaiiIpSec
     */
    phase2_lifetime?: string;
    /**
     * The Kawaii IPsec connection phase 2 Diffie Hellman IANA algorithm.
     * @type {number}
     * @memberof KawaiiIpSec
     */
    phase2_dh_group_number: KawaiiIpSecPhase2DhGroupNumberEnum;
    /**
     * The Kawaii IPsec connection phase 2 integrity algorithm..
     * @type {string}
     * @memberof KawaiiIpSec
     */
    phase2_integrity_algorithm: KawaiiIpSecPhase2IntegrityAlgorithmEnum;
    /**
     * The Kawaii IPsec connection phase 2 encryption algorithm..
     * @type {string}
     * @memberof KawaiiIpSec
     */
    phase2_encryption_algorithm: KawaiiIpSecPhase2EncryptionAlgorithmEnum;
    /**
     * @type {KawaiiFirewall}
     * @memberof KawaiiIpSec
     */
    firewall?: KawaiiFirewall;
}

/**
 * @export
 * @enum {string}
 */
export enum KawaiiIpSecDpdTimeoutActionEnum {
    Clear = 'clear',
    Restart = 'restart',
    Start = 'start'
}
/**
 * @export
 * @enum {string}
 */
export enum KawaiiIpSecStartActionEnum {
    None = 'none',
    Start = 'start',
    Trap = 'trap'
}
/**
 * @export
 * @enum {string}
 */
export enum KawaiiIpSecPhase1DhGroupNumberEnum {
    NUMBER_2 = 2,
    NUMBER_5 = 5,
    NUMBER_14 = 14,
    NUMBER_15 = 15,
    NUMBER_16 = 16,
    NUMBER_17 = 17,
    NUMBER_18 = 18,
    NUMBER_19 = 19,
    NUMBER_20 = 20,
    NUMBER_21 = 21,
    NUMBER_22 = 22,
    NUMBER_23 = 23,
    NUMBER_24 = 24
}
/**
 * @export
 * @enum {string}
 */
export enum KawaiiIpSecPhase1IntegrityAlgorithmEnum {
    Sha1 = 'SHA1',
    Sha256 = 'SHA256',
    Sha384 = 'SHA384',
    Sha512 = 'SHA512'
}
/**
 * @export
 * @enum {string}
 */
export enum KawaiiIpSecPhase1EncryptionAlgorithmEnum {
    Aes128 = 'AES128',
    Aes256 = 'AES256',
    Camellia128 = 'CAMELLIA128',
    Camellia256 = 'CAMELLIA256'
}
/**
 * @export
 * @enum {string}
 */
export enum KawaiiIpSecPhase2DhGroupNumberEnum {
    NUMBER_2 = 2,
    NUMBER_5 = 5,
    NUMBER_14 = 14,
    NUMBER_15 = 15,
    NUMBER_16 = 16,
    NUMBER_17 = 17,
    NUMBER_18 = 18,
    NUMBER_19 = 19,
    NUMBER_20 = 20,
    NUMBER_21 = 21,
    NUMBER_22 = 22,
    NUMBER_23 = 23,
    NUMBER_24 = 24
}
/**
 * @export
 * @enum {string}
 */
export enum KawaiiIpSecPhase2IntegrityAlgorithmEnum {
    Sha1 = 'SHA1',
    Sha256 = 'SHA256',
    Sha384 = 'SHA384',
    Sha512 = 'SHA512'
}
/**
 * @export
 * @enum {string}
 */
export enum KawaiiIpSecPhase2EncryptionAlgorithmEnum {
    Aes128 = 'AES128',
    Aes256 = 'AES256',
    Camellia128 = 'CAMELLIA128',
    Camellia256 = 'CAMELLIA256'
}

