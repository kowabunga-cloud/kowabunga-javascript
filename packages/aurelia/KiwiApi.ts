/**
 * Kowabunga API documentation
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * The version of the OpenAPI document: 0.52.5
 * Contact: maintainers@kowabunga.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  Kiwi,
} from './models';

/**
 * deleteKiwi - parameters interface
 */
export interface IDeleteKiwiParams {
  kiwiId: string;
}

/**
 * listKiwis - parameters interface
 */
export interface IListKiwisParams {
}

/**
 * readKiwi - parameters interface
 */
export interface IReadKiwiParams {
  kiwiId: string;
}

/**
 * updateKiwi - parameters interface
 */
export interface IUpdateKiwiParams {
  kiwiId: string;
  kiwi: Kiwi;
}

/**
 * KiwiApi - API class
 */
@autoinject()
export class KiwiApi extends Api {

  /**
   * Creates a new KiwiApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Deletes an existing Kiwi (Kowabunga Inner Wan Interface) provides edge-network services..
   * @param params.kiwiId The ID of the Kiwi (Kowabunga Inner Wan Interface) provides edge-network services..
   */
  async deleteKiwi(params: IDeleteKiwiParams): Promise<any> {
    // Verify required parameters are set
    this.ensureParamIsSet('deleteKiwi', params, 'kiwiId');

    // Create URL to call
    const url = `${this.basePath}/kiwi/{kiwiId}`
      .replace(`{${'kiwiId'}}`, encodeURIComponent(`${params['kiwiId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asDelete()

      // Authentication 'ApiKeyAuth' required
      .withHeader('X-API-Key', this.authStorage.getApiKeyAuth())
      // Authentication 'BearerAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Returns the IDs of Kiwi (Kowabunga Inner Wan Interface) provides edge-network services. objects.
   */
  async listKiwis(): Promise<Array<string>> {
    // Verify required parameters are set

    // Create URL to call
    const url = `${this.basePath}/kiwi`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'ApiKeyAuth' required
      .withHeader('X-API-Key', this.authStorage.getApiKeyAuth())
      // Authentication 'BearerAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Returns a Kiwi (Kowabunga Inner Wan Interface) provides edge-network services..
   * @param params.kiwiId The ID of the Kiwi (Kowabunga Inner Wan Interface) provides edge-network services..
   */
  async readKiwi(params: IReadKiwiParams): Promise<Kiwi> {
    // Verify required parameters are set
    this.ensureParamIsSet('readKiwi', params, 'kiwiId');

    // Create URL to call
    const url = `${this.basePath}/kiwi/{kiwiId}`
      .replace(`{${'kiwiId'}}`, encodeURIComponent(`${params['kiwiId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'ApiKeyAuth' required
      .withHeader('X-API-Key', this.authStorage.getApiKeyAuth())
      // Authentication 'BearerAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Updates a Kiwi (Kowabunga Inner Wan Interface) provides edge-network services. configuration.
   * @param params.kiwiId The ID of the Kiwi (Kowabunga Inner Wan Interface) provides edge-network services..
   * @param params.kiwi Kiwi payload.
   */
  async updateKiwi(params: IUpdateKiwiParams): Promise<Kiwi> {
    // Verify required parameters are set
    this.ensureParamIsSet('updateKiwi', params, 'kiwiId');
    this.ensureParamIsSet('updateKiwi', params, 'kiwi');

    // Create URL to call
    const url = `${this.basePath}/kiwi/{kiwiId}`
      .replace(`{${'kiwiId'}}`, encodeURIComponent(`${params['kiwiId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPut()
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['kiwi'] || {}))

      // Authentication 'ApiKeyAuth' required
      .withHeader('X-API-Key', this.authStorage.getApiKeyAuth())
      // Authentication 'BearerAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

