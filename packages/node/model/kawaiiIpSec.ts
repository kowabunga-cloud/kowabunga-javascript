/**
 * Kowabunga API documentation
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * The version of the OpenAPI document: 0.52.5
 * Contact: maintainers@kowabunga.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { KawaiiFirewall } from './kawaiiFirewall';

/**
* A Kawaii IPsec connection.
*/
export class KawaiiIpSec {
    /**
    * The Kawaii IPsec connection ID (auto-generated).
    */
    'id'?: string;
    /**
    * The Kawaii IPsec connection name.
    */
    'name': string;
    /**
    * The Kawaii IPsec connection description.
    */
    'description'?: string;
    /**
    * The Kawaii IPsec connection IPSec IP.
    */
    'ip'?: string;
    /**
    * The Kawaii IPsec connection remote peer VPN Gateway.
    */
    'remoteIp': string;
    /**
    * The Kawaii IPsec connection remote subnet.
    */
    'remoteSubnet': string;
    /**
    * The Kawaii IPsec connection pre-shared key(PSK).
    */
    'preSharedKey': string;
    /**
    * The Kawaii IPsec connection Dead Peer Detection Action (clear,restart or trap).
    */
    'dpdTimeoutAction'?: KawaiiIpSec.DpdTimeoutActionEnum = KawaiiIpSec.DpdTimeoutActionEnum.Restart;
    /**
    * The Kawaii IPsec connection Dead Peer Detection Timeout.
    */
    'dpdTimeout'?: string = '240s';
    /**
    * The Kawaii IPsec connection start action (none, start, trap).
    */
    'startAction'?: KawaiiIpSec.StartActionEnum = KawaiiIpSec.StartActionEnum.Start;
    /**
    * The Kawaii IPsec connection rekey time. Default is 2h.
    */
    'rekeyTime'?: string = '2h';
    /**
    * The Kawaii IPsec connection Lifetime for phase 1 negociation. Default is 1h.
    */
    'phase1Lifetime'?: string = '1h';
    /**
    * The Kawaii IPsec connection phase 1 Diffie Hellman IANA algorithm.
    */
    'phase1DhGroupNumber': KawaiiIpSec.Phase1DhGroupNumberEnum;
    /**
    * The Kawaii IPsec connection phase 1 integrity algorithm..
    */
    'phase1IntegrityAlgorithm': KawaiiIpSec.Phase1IntegrityAlgorithmEnum;
    /**
    * The Kawaii IPsec connection phase 1 encryption algorithm..
    */
    'phase1EncryptionAlgorithm': KawaiiIpSec.Phase1EncryptionAlgorithmEnum;
    /**
    * The Kawaii IPsec connection Lifetime for phase 2 negociation. Default is 1h.
    */
    'phase2Lifetime'?: string = '1h';
    /**
    * The Kawaii IPsec connection phase 2 Diffie Hellman IANA algorithm.
    */
    'phase2DhGroupNumber': KawaiiIpSec.Phase2DhGroupNumberEnum;
    /**
    * The Kawaii IPsec connection phase 2 integrity algorithm..
    */
    'phase2IntegrityAlgorithm': KawaiiIpSec.Phase2IntegrityAlgorithmEnum;
    /**
    * The Kawaii IPsec connection phase 2 encryption algorithm..
    */
    'phase2EncryptionAlgorithm': KawaiiIpSec.Phase2EncryptionAlgorithmEnum;
    'firewall'?: KawaiiFirewall;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "ip",
            "baseName": "ip",
            "type": "string"
        },
        {
            "name": "remoteIp",
            "baseName": "remote_ip",
            "type": "string"
        },
        {
            "name": "remoteSubnet",
            "baseName": "remote_subnet",
            "type": "string"
        },
        {
            "name": "preSharedKey",
            "baseName": "pre_shared_key",
            "type": "string"
        },
        {
            "name": "dpdTimeoutAction",
            "baseName": "dpd_timeout_action",
            "type": "KawaiiIpSec.DpdTimeoutActionEnum"
        },
        {
            "name": "dpdTimeout",
            "baseName": "dpd_timeout",
            "type": "string"
        },
        {
            "name": "startAction",
            "baseName": "start_action",
            "type": "KawaiiIpSec.StartActionEnum"
        },
        {
            "name": "rekeyTime",
            "baseName": "rekey_time",
            "type": "string"
        },
        {
            "name": "phase1Lifetime",
            "baseName": "phase1_lifetime",
            "type": "string"
        },
        {
            "name": "phase1DhGroupNumber",
            "baseName": "phase1_dh_group_number",
            "type": "KawaiiIpSec.Phase1DhGroupNumberEnum"
        },
        {
            "name": "phase1IntegrityAlgorithm",
            "baseName": "phase1_integrity_algorithm",
            "type": "KawaiiIpSec.Phase1IntegrityAlgorithmEnum"
        },
        {
            "name": "phase1EncryptionAlgorithm",
            "baseName": "phase1_encryption_algorithm",
            "type": "KawaiiIpSec.Phase1EncryptionAlgorithmEnum"
        },
        {
            "name": "phase2Lifetime",
            "baseName": "phase2_lifetime",
            "type": "string"
        },
        {
            "name": "phase2DhGroupNumber",
            "baseName": "phase2_dh_group_number",
            "type": "KawaiiIpSec.Phase2DhGroupNumberEnum"
        },
        {
            "name": "phase2IntegrityAlgorithm",
            "baseName": "phase2_integrity_algorithm",
            "type": "KawaiiIpSec.Phase2IntegrityAlgorithmEnum"
        },
        {
            "name": "phase2EncryptionAlgorithm",
            "baseName": "phase2_encryption_algorithm",
            "type": "KawaiiIpSec.Phase2EncryptionAlgorithmEnum"
        },
        {
            "name": "firewall",
            "baseName": "firewall",
            "type": "KawaiiFirewall"
        }    ];

    static getAttributeTypeMap() {
        return KawaiiIpSec.attributeTypeMap;
    }
}

export namespace KawaiiIpSec {
    export enum DpdTimeoutActionEnum {
        Clear = <any> 'clear',
        Restart = <any> 'restart',
        Start = <any> 'start'
    }
    export enum StartActionEnum {
        None = <any> 'none',
        Start = <any> 'start',
        Trap = <any> 'trap'
    }
    export enum Phase1DhGroupNumberEnum {
        NUMBER_2 = <any> 2,
        NUMBER_5 = <any> 5,
        NUMBER_14 = <any> 14,
        NUMBER_15 = <any> 15,
        NUMBER_16 = <any> 16,
        NUMBER_17 = <any> 17,
        NUMBER_18 = <any> 18,
        NUMBER_19 = <any> 19,
        NUMBER_20 = <any> 20,
        NUMBER_21 = <any> 21,
        NUMBER_22 = <any> 22,
        NUMBER_23 = <any> 23,
        NUMBER_24 = <any> 24
    }
    export enum Phase1IntegrityAlgorithmEnum {
        Sha1 = <any> 'SHA1',
        Sha256 = <any> 'SHA256',
        Sha384 = <any> 'SHA384',
        Sha512 = <any> 'SHA512'
    }
    export enum Phase1EncryptionAlgorithmEnum {
        Aes128 = <any> 'AES128',
        Aes256 = <any> 'AES256',
        Camellia128 = <any> 'CAMELLIA128',
        Camellia256 = <any> 'CAMELLIA256'
    }
    export enum Phase2DhGroupNumberEnum {
        NUMBER_2 = <any> 2,
        NUMBER_5 = <any> 5,
        NUMBER_14 = <any> 14,
        NUMBER_15 = <any> 15,
        NUMBER_16 = <any> 16,
        NUMBER_17 = <any> 17,
        NUMBER_18 = <any> 18,
        NUMBER_19 = <any> 19,
        NUMBER_20 = <any> 20,
        NUMBER_21 = <any> 21,
        NUMBER_22 = <any> 22,
        NUMBER_23 = <any> 23,
        NUMBER_24 = <any> 24
    }
    export enum Phase2IntegrityAlgorithmEnum {
        Sha1 = <any> 'SHA1',
        Sha256 = <any> 'SHA256',
        Sha384 = <any> 'SHA384',
        Sha512 = <any> 'SHA512'
    }
    export enum Phase2EncryptionAlgorithmEnum {
        Aes128 = <any> 'AES128',
        Aes256 = <any> 'AES256',
        Camellia128 = <any> 'CAMELLIA128',
        Camellia256 = <any> 'CAMELLIA256'
    }
}
