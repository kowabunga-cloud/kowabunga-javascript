/**
 * Kowabunga API documentation
 *
 * Contact: maintainers@kowabunga.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { KawaiiFirewall } from './kawaiiFirewall';


/**
 * A Kawaii IPsec connection.
 */
export interface KawaiiIpSec { 
    /**
     * The Kawaii IPsec connection ID (auto-generated).
     */
    id?: string;
    /**
     * The Kawaii IPsec connection name.
     */
    name: string;
    /**
     * The Kawaii IPsec connection description.
     */
    description?: string;
    /**
     * The Kawaii IPsec connection IPSec IP.
     */
    ip?: string;
    /**
     * The Kawaii IPsec connection remote peer VPN Gateway.
     */
    remote_ip: string;
    /**
     * The Kawaii IPsec connection remote subnet.
     */
    remote_subnet: string;
    /**
     * The Kawaii IPsec connection pre-shared key(PSK).
     */
    pre_shared_key: string;
    /**
     * The Kawaii IPsec connection Dead Peer Detection Action (clear,restart or trap).
     */
    dpd_timeout_action?: KawaiiIpSec.DpdTimeoutActionEnum;
    /**
     * The Kawaii IPsec connection Dead Peer Detection Timeout.
     */
    dpd_timeout?: string;
    /**
     * The Kawaii IPsec connection start action (none, start, trap).
     */
    start_action?: KawaiiIpSec.StartActionEnum;
    /**
     * The Kawaii IPsec connection rekey time. Default is 2h.
     */
    rekey_time?: string;
    /**
     * The Kawaii IPsec connection Lifetime for phase 1 negociation. Default is 1h.
     */
    phase1_lifetime?: string;
    /**
     * The Kawaii IPsec connection phase 1 Diffie Hellman IANA algorithm.
     */
    phase1_dh_group_number: KawaiiIpSec.Phase1DhGroupNumberEnum;
    /**
     * The Kawaii IPsec connection phase 1 integrity algorithm..
     */
    phase1_integrity_algorithm: KawaiiIpSec.Phase1IntegrityAlgorithmEnum;
    /**
     * The Kawaii IPsec connection phase 1 encryption algorithm..
     */
    phase1_encryption_algorithm: KawaiiIpSec.Phase1EncryptionAlgorithmEnum;
    /**
     * The Kawaii IPsec connection Lifetime for phase 2 negociation. Default is 1h.
     */
    phase2_lifetime?: string;
    /**
     * The Kawaii IPsec connection phase 2 Diffie Hellman IANA algorithm.
     */
    phase2_dh_group_number: KawaiiIpSec.Phase2DhGroupNumberEnum;
    /**
     * The Kawaii IPsec connection phase 2 integrity algorithm..
     */
    phase2_integrity_algorithm: KawaiiIpSec.Phase2IntegrityAlgorithmEnum;
    /**
     * The Kawaii IPsec connection phase 2 encryption algorithm..
     */
    phase2_encryption_algorithm: KawaiiIpSec.Phase2EncryptionAlgorithmEnum;
    firewall?: KawaiiFirewall;
}
export namespace KawaiiIpSec {
    export type DpdTimeoutActionEnum = 'clear' | 'restart' | 'start';
    export const DpdTimeoutActionEnum = {
        Clear: 'clear' as DpdTimeoutActionEnum,
        Restart: 'restart' as DpdTimeoutActionEnum,
        Start: 'start' as DpdTimeoutActionEnum
    };
    export type StartActionEnum = 'none' | 'start' | 'trap';
    export const StartActionEnum = {
        None: 'none' as StartActionEnum,
        Start: 'start' as StartActionEnum,
        Trap: 'trap' as StartActionEnum
    };
    export type Phase1DhGroupNumberEnum = 2 | 5 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24;
    export const Phase1DhGroupNumberEnum = {
        NUMBER_2: 2 as Phase1DhGroupNumberEnum,
        NUMBER_5: 5 as Phase1DhGroupNumberEnum,
        NUMBER_14: 14 as Phase1DhGroupNumberEnum,
        NUMBER_15: 15 as Phase1DhGroupNumberEnum,
        NUMBER_16: 16 as Phase1DhGroupNumberEnum,
        NUMBER_17: 17 as Phase1DhGroupNumberEnum,
        NUMBER_18: 18 as Phase1DhGroupNumberEnum,
        NUMBER_19: 19 as Phase1DhGroupNumberEnum,
        NUMBER_20: 20 as Phase1DhGroupNumberEnum,
        NUMBER_21: 21 as Phase1DhGroupNumberEnum,
        NUMBER_22: 22 as Phase1DhGroupNumberEnum,
        NUMBER_23: 23 as Phase1DhGroupNumberEnum,
        NUMBER_24: 24 as Phase1DhGroupNumberEnum
    };
    export type Phase1IntegrityAlgorithmEnum = 'SHA1' | 'SHA256' | 'SHA384' | 'SHA512';
    export const Phase1IntegrityAlgorithmEnum = {
        Sha1: 'SHA1' as Phase1IntegrityAlgorithmEnum,
        Sha256: 'SHA256' as Phase1IntegrityAlgorithmEnum,
        Sha384: 'SHA384' as Phase1IntegrityAlgorithmEnum,
        Sha512: 'SHA512' as Phase1IntegrityAlgorithmEnum
    };
    export type Phase1EncryptionAlgorithmEnum = 'AES128' | 'AES256' | 'CAMELLIA128' | 'CAMELLIA256';
    export const Phase1EncryptionAlgorithmEnum = {
        Aes128: 'AES128' as Phase1EncryptionAlgorithmEnum,
        Aes256: 'AES256' as Phase1EncryptionAlgorithmEnum,
        Camellia128: 'CAMELLIA128' as Phase1EncryptionAlgorithmEnum,
        Camellia256: 'CAMELLIA256' as Phase1EncryptionAlgorithmEnum
    };
    export type Phase2DhGroupNumberEnum = 2 | 5 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24;
    export const Phase2DhGroupNumberEnum = {
        NUMBER_2: 2 as Phase2DhGroupNumberEnum,
        NUMBER_5: 5 as Phase2DhGroupNumberEnum,
        NUMBER_14: 14 as Phase2DhGroupNumberEnum,
        NUMBER_15: 15 as Phase2DhGroupNumberEnum,
        NUMBER_16: 16 as Phase2DhGroupNumberEnum,
        NUMBER_17: 17 as Phase2DhGroupNumberEnum,
        NUMBER_18: 18 as Phase2DhGroupNumberEnum,
        NUMBER_19: 19 as Phase2DhGroupNumberEnum,
        NUMBER_20: 20 as Phase2DhGroupNumberEnum,
        NUMBER_21: 21 as Phase2DhGroupNumberEnum,
        NUMBER_22: 22 as Phase2DhGroupNumberEnum,
        NUMBER_23: 23 as Phase2DhGroupNumberEnum,
        NUMBER_24: 24 as Phase2DhGroupNumberEnum
    };
    export type Phase2IntegrityAlgorithmEnum = 'SHA1' | 'SHA256' | 'SHA384' | 'SHA512';
    export const Phase2IntegrityAlgorithmEnum = {
        Sha1: 'SHA1' as Phase2IntegrityAlgorithmEnum,
        Sha256: 'SHA256' as Phase2IntegrityAlgorithmEnum,
        Sha384: 'SHA384' as Phase2IntegrityAlgorithmEnum,
        Sha512: 'SHA512' as Phase2IntegrityAlgorithmEnum
    };
    export type Phase2EncryptionAlgorithmEnum = 'AES128' | 'AES256' | 'CAMELLIA128' | 'CAMELLIA256';
    export const Phase2EncryptionAlgorithmEnum = {
        Aes128: 'AES128' as Phase2EncryptionAlgorithmEnum,
        Aes256: 'AES256' as Phase2EncryptionAlgorithmEnum,
        Camellia128: 'CAMELLIA128' as Phase2EncryptionAlgorithmEnum,
        Camellia256: 'CAMELLIA256' as Phase2EncryptionAlgorithmEnum
    };
}


